<policies>
    <inbound>
        <base />
        <!-- IP Whitelist (Optional) -->
        <ip-filter action="allow">
            <address-range from="0.0.0.0" to="255.255.255.255" />
        </ip-filter>
        
        <!-- Request Size Limits -->
        <set-variable name="requestSize" value="@(context.Request.Body.As<string>().Length)" />
        <choose>
            <when condition="@(context.Variables.GetValueOrDefault<int>("requestSize", 0) > 1048576)">
                <return-response>
                    <set-status code="413" reason="Request Entity Too Large" />
                    <set-body>{"error": "Request body too large"}</set-body>
                </return-response>
            </when>
        </choose>
        
        <!-- Security Headers -->
        <set-header name="X-Content-Type-Options" exists-action="override">
            <value>nosniff</value>
        </set-header>
        <set-header name="X-Frame-Options" exists-action="override">
            <value>DENY</value>
        </set-header>
        <set-header name="X-XSS-Protection" exists-action="override">
            <value>1; mode=block</value>
        </set-header>
        
        <!-- Basic Input Validation -->
        <set-variable name="userAgent" value="@(context.Request.Headers.GetValueOrDefault("User-Agent", ""))" />
        <choose>
            <when condition="@(context.Variables.GetValueOrDefault<string>("userAgent", "").Contains("sqlmap") || 
                            context.Variables.GetValueOrDefault<string>("userAgent", "").Contains("nmap") || 
                            context.Variables.GetValueOrDefault<string>("userAgent", "").Contains("nikto"))">
                <return-response>
                    <set-status code="403" reason="Forbidden" />
                    <set-body>{"error": "Suspicious user agent detected"}</set-body>
                </return-response>
            </when>
        </choose>
    </inbound>
    <backend>
        <base />
    </backend>
    <outbound>
        <base />
        <!-- Remove server information -->
        <set-header name="Server" exists-action="delete" />
        <set-header name="X-Powered-By" exists-action="delete" />
        <set-header name="X-AspNet-Version" exists-action="delete" />
    </outbound>
    <on-error>
        <base />
    </on-error>
</policies> 